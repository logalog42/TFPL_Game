#    This file contains a list of all available settings and their default value for minetest.conf

#    By default, all the settings are commented and not functional.
#    Uncomment settings by removing the preceding #.

#    minetest.conf is read by default from:
#    ../minetest.conf
#    ../../minetest.conf
#    Any other path can be chosen by passing the path as a parameter
#    to the program, eg. "minetest.exe --config ../minetest.conf.example".

#    Further documentation:
#    http://wiki.minetest.net/

# This file contains settings of Minetest Game that can be changed in
# minetest.conf.
# By default, all the settings are commented and not functional.
# Uncomment settings by removing the preceding #.

# Sets the behaviour of the inventory items when a player dies.
#   bones: Store items in a bone node but drop items if inside protected area.
#   drop: Drop items on the ground.
#   keep: Player keeps items.
bones_mode = keep

# Whether fire should be enabled. If disabled, 'basic_flame' nodes will
# disappear.
# 'permanent_flame' nodes will remain with either setting.
enable_fire = false 

# Enable flame sound.
flame_sound = true

# Whether lavacooling should be enabled.
enable_lavacooling = true

# Whether the stuff in initial_stuff should be given to new players.
#give_initial_stuff = false
#initial_stuff = default:pick_steel,default:axe_steel,default:shovel_steel,default:torch 99,default:cobble 99

# Whether the TNT mod should be enabled.
enable_tnt = false

# The radius of a TNT explosion.
#tnt_radius = 3

# Enable the stairs mod ABM that replaces the old 'upside down'
# stair and slab nodes in old maps with the new param2 versions.
#enable_stairs_replace_abm = false

# Whether to allow respawning in beds.
# Default value is true.
enable_bed_respawn = true

# Whether players can skip night by sleeping.
# Default value is true.
#enable_bed_night_skip = true

# If enabled, fences and walls cannot be jumped over.
enable_fence_tall = true

# Whether the engine's spawn search, which does not check for a suitable
# starting biome, is used.
# Default value is false.
#engine_spawn = false

# Whether river water source nodes create flowing sounds.
# Helps rivers create more sound, especially on level sections.
#river_source_sounds = false

# Enable cloud variation by the 'weather' mod.
# Non-functional in V6 or Singlenode mapgens.
enable_weather = true

#
# Controls
#

#    Automatically jump up single-node obstacles.
#    type: bool
autojump = true

#    Key for opening the inventory.
#    See http://irrlicht.sourceforge.net/docu/namespaceirr.html#a54da2a0e231901735e3da1b0edf72eb3
#    type: key
keymap_inventory = KEY_KEY_E

#    Key for moving fast in fast mode.
#    See http://irrlicht.sourceforge.net/docu/namespaceirr.html#a54da2a0e231901735e3da1b0edf72eb3
#    type: key
keymap_aux1 = KEY_KEY_I

#    Key for opening the chat window.
#    See http://irrlicht.sourceforge.net/docu/namespaceirr.html#a54da2a0e231901735e3da1b0edf72eb3
#    type: key
keymap_chat = t

#    Key for opening the chat window to type commands.
#    See http://irrlicht.sourceforge.net/docu/namespaceirr.html#a54da2a0e231901735e3da1b0edf72eb3
#    type: key
keymap_cmd = /

#    Key for opening the chat window to type local commands.
#    See http://irrlicht.sourceforge.net/docu/namespaceirr.html#a54da2a0e231901735e3da1b0edf72eb3
#    type: key
keymap_cmd_local = .

#    Key for toggling display of minimap.
#    See http://irrlicht.sourceforge.net/docu/namespaceirr.html#a54da2a0e231901735e3da1b0edf72eb3
#    type: key
keymap_minimap = KEY_KEY_V

#    Key for taking screenshots.
#    See http://irrlicht.sourceforge.net/docu/namespaceirr.html#a54da2a0e231901735e3da1b0edf72eb3
#    type: key
keymap_screenshot = KEY_F12

#    Key for toggling the display of the large chat console.
#    See http://irrlicht.sourceforge.net/docu/namespaceirr.html#a54da2a0e231901735e3da1b0edf72eb3
#    type: key
keymap_console = KEY_F10

#    Key for toggling the display of fog.
#    See http://irrlicht.sourceforge.net/docu/namespaceirr.html#a54da2a0e231901735e3da1b0edf72eb3
#    type: key
keymap_toggle_force_fog_off = KEY_F3

#    Key for toggling the display of debug info.
#    See http://irrlicht.sourceforge.net/docu/namespaceirr.html#a54da2a0e231901735e3da1b0edf72eb3
#    type: key
keymap_toggle_debug =

#    Key for toggling the display of the profiler. Used for development.
#    See http://irrlicht.sourceforge.net/docu/namespaceirr.html#a54da2a0e231901735e3da1b0edf72eb3
#    type: key
keymap_toggle_profiler =

#
# Graphics
#

## In-Game

### Basic

#    Connects glass if supported by node.
#    type: bool
connected_glass = true

### Advanced

#    Arm inertia, gives a more realistic movement of
#    the arm when the camera moves.
#    type: bool
arm_inertia = true

#    If FPS would go higher than this, limit it by sleeping
#    to not waste CPU power for no benefit.
#    type: int min: 1
fps_max = 60

#    Maximum FPS when the window is not focused, or when the game is paused.
#    type: int min: 1
fps_max_unfocused = 20

#    Open the pause menu when the window's focus is lost. Does not pause if a formspec is
#    open.
#    type: bool
pause_on_lost_focus = false

#    View distance in nodes.
#    type: int min: 20 max: 4000
viewing_range = 190

#    Camera 'near clipping plane' distance in nodes, between 0 and 0.25
#    Only works on GLES platforms. Most users will not need to change this.
#    Increasing can reduce artifacting on weaker GPUs.
#    0.1 = Default, 0.25 = Good value for weaker tablets.
#    type: float min: 0 max: 0.25
near_plane = 0.1

#    Path to texture directory. All textures are first searched from here.
#    type: path
# texture_path =

#    Enables minimap.
#    type: bool
enable_minimap = true

#    Shape of the minimap. Enabled = round, disabled = square.
#    type: bool
# minimap_shape_round = true

#    True = 256
#    False = 128
#    Usable to make minimap smoother on slower machines.
#    type: bool
# minimap_double_scan_height = true

#
# Client
#

#    If enabled, http links in chat can be middle-clicked or ctrl-left-clicked to open the link in the OS's default web browser.
#    type: bool
clickable_chat_weblinks = false

#    Enable Lua modding support on client.
#    This support is experimental and API can change.
#    type: bool
enable_client_modding = false

#    URL to the server list displayed in the Multiplayer Tab.
#    type: string
# serverlist_url = servers.minetest.net

#    File in client/serverlist/ that contains your favorite servers displayed in the
#    Multiplayer Tab.
#    type: string
# serverlist_file = favoriteservers.json

#    Maximum size of the out chat queue.
#    0 to disable queueing and -1 to make the queue size unlimited.
#    type: int
# max_out_chat_queue_size = 0

#    Enable register confirmation when connecting to server.
#    If disabled, new account will be registered automatically.
#    type: bool
enable_register_confirmation = true

## Advanced

#    Whether to show the client debug info (has the same effect as hitting F5).
#    type: bool
show_debug = false

#
# Server / Singleplayer
#

#    Name of the server, to be displayed when players join and in the serverlist.
#    type: string
server_name = TFPL Minetest server

#    Description of server, to be displayed when players join and in the serverlist.
#    type: string
server_description = Constant Network Server

#    Automatically report to the serverlist.
#    type: bool
server_announce = false

## Network

#    Enable/disable running an IPv6 server.
#    Ignored if bind_address is set.
#    Needs enable_ipv6 to be enabled.
#    type: bool
# ipv6_server = false

### Advanced

#    Maximum number of blocks that are simultaneously sent per client.
#    The maximum total count is calculated dynamically:
#    max_total = ceil((#clients + max_users) * per_client / 4)
#    type: int
# max_simultaneous_block_sends_per_client = 40

#    To reduce lag, block transfers are slowed down when a player is building something.
#    This determines how long they are slowed down after placing or removing a node.
#    type: float
# full_block_send_enable_min_time_from_building = 2.0

#    Maximum number of packets sent per send step, if you have a slow connection
#    try reducing it, but don't reduce it to a number below double of targeted
#    client number.
#    type: int
# max_packets_per_iteration = 1024

#    ZLib compression level to use when sending mapblocks to the client.
#    -1 - Zlib's default compression level
#    0 - no compresson, fastest
#    9 - best compression, slowest
#    (levels 1-3 use Zlib's "fast" method, 4-9 use the normal method)
#    type: int min: -1 max: 9
# map_compression_level_net = -1

## Game

#    Enable players getting damage and dying.
#    type: bool
enable_damage = false

#    Enable creative mode for all players
#    type: bool
creative_mode = true

#    A chosen map seed for a new map, leave empty for random.
#    Will be overridden when creating a new world in the main menu.
#    type: string
fixed_map_seed = 5

#    New users need to input this password.
#    type: string
# default_password =

#    The privileges that new users automatically get.
#    See /privs in game for a full list on your server and mod configuration.
#    type: string
default_privs = interact, shout, creative

#    Privileges that players with basic_privs can grant
#    type: string
basic_privs = interact,

#    Whether to allow players to damage and kill each other.
#    type: bool
enable_pvp = false

#    If enabled, new players cannot join with an empty password.
#    type: bool
disallow_empty_password = true

#    If enabled, actions are recorded for rollback.
#    This option is only read when server starts.
#    type: bool
enable_rollback_recording = true

#    Controls length of day/night cycle.
#    Examples:
#    72 = 20min, 360 = 4min, 1 = 24hour, 0 = day/night/whatever stays unchanged.
#    type: int
time_speed = 72

#    Time of day when a new world is started, in millihours (0-23999).
#    type: int min: 0 max: 23999
world_start_time = 12000

#    Interval of saving important changes in the world, stated in seconds.
#    type: float
# server_map_save_interval = 5.3

### Advanced

#    Handling for deprecated Lua API calls:
#    -    none: Do not log deprecated calls
#    -    log: mimic and log backtrace of deprecated call (default).
#    -    error: abort on usage of deprecated call (suggested for mod developers).
#    type: enum values: none, log, error
# deprecated_lua_api_handling = log

#    Number of extra blocks that can be loaded by /clearobjects at once.
#    This is a trade-off between sqlite transaction overhead and
#    memory consumption (4096=100MB, as a rule of thumb).
#    type: int
# max_clearobjects_extra_loaded_blocks = 4096

#    How much the server will wait before unloading unused mapblocks.
#    Higher value is smoother, but will use more RAM.
#    type: int
# server_unload_unused_data_timeout = 29

#    Maximum number of statically stored objects in a block.
#    type: int
# max_objects_per_block = 64

#    See https://www.sqlite.org/pragma.html#pragma_synchronous
#    type: enum values: 0, 1, 2
# sqlite_synchronous = 2

#    ZLib compression level to use when saving mapblocks to disk.
#    -1 - Zlib's default compression level
#    0 - no compresson, fastest
#    9 - best compression, slowest
#    (levels 1-3 use Zlib's "fast" method, 4-9 use the normal method)
#    type: int min: -1 max: 9
# map_compression_level_disk = 3

#    Length of a server tick and the interval at which objects are generally updated over
#    network.
#    type: float
# dedicated_server_step = 0.09

#    Length of time between active block management cycles
#    type: float
# active_block_mgmt_interval = 2.0

#    Length of time between Active Block Modifier (ABM) execution cycles
#    type: float
# abm_interval = 1.0

#    The time budget allowed for ABMs to execute on each step
#    (as a fraction of the ABM Interval)
#    type: float min: 0.1 max: 0.9
# abm_time_budget = 0.2

#    Length of time between NodeTimer execution cycles
#    type: float
# nodetimer_interval = 0.2

#    If enabled, invalid world data won't cause the server to shut down.
#    Only enable this if you know what you are doing.
#    type: bool
# ignore_world_load_errors = false

#    Max liquids processed per step.
#    type: int
# liquid_loop_max = 100000

#    The time (in seconds) that the liquids queue may grow beyond processing
#    capacity until an attempt is made to decrease its size by dumping old queue
#    items.  A value of 0 disables the functionality.
#    type: int
# liquid_queue_purge_time = 0

#    Liquid update interval in seconds.
#    type: float
# liquid_update = 1.0

#    At this distance the server will aggressively optimize which blocks are sent to
#    clients.
#    Small values potentially improve performance a lot, at the expense of visible
#    rendering glitches (some blocks will not be rendered under water and in caves,
#    as well as sometimes on land).
#    Setting this to a value greater than max_block_send_distance disables this
#    optimization.
#    Stated in mapblocks (16 nodes).
#    type: int min: 2
# block_send_optimize_distance = 4

#    If enabled the server will perform map block occlusion culling based on
#    on the eye position of the player. This can reduce the number of blocks
#    sent to the client 50-80%. The client will not longer receive most invisible
#    so that the utility of noclip mode is reduced.
#    type: bool
server_side_occlusion_culling = true

#    Restricts the access of certain client-side functions on servers.
#    Combine the byteflags below to restrict client-side features, or set to 0
#    for no restrictions:
#    LOAD_CLIENT_MODS: 1 (disable loading client-provided mods)
#    CHAT_MESSAGES: 2 (disable send_chat_message call client-side)
#    READ_ITEMDEFS: 4 (disable get_item_def call client-side)
#    READ_NODEDEFS: 8 (disable get_node_def call client-side)
#    LOOKUP_NODES_LIMIT: 16 (limits get_node call client-side to
#    csm_restriction_noderange)
#    READ_PLAYERINFO: 32 (disable get_player_names call client-side)
#    type: int
csm_restriction_flags = 62

#    If the CSM restriction for node range is enabled, get_node calls are limited
#    to this distance from the player to the node.
#    type: int
# csm_restriction_noderange = 0

## Security

#    Prevent mods from doing insecure things like running shell commands.
#    type: bool

secure.enable_security = true

#    Comma-separated list of trusted mods that are allowed to access insecure
#    functions even when mod security is on (via request_insecure_environment()).
#    type: string

secure.trusted_mods = irc, logging

#    Comma-separated list of mods that are allowed to access HTTP APIs, which
#    allow them to upload and download data to/from the internet.
#    type: string
secure.http_mods = mapserver
mapserver.url=127.0.0.1:8080
mapserver.key=ScOFgJTvaFiYbOOI 


### Profiling

#    Load the game profiler to collect game profiling data.
#    Provides a /profiler command to access the compiled profile.
#    Useful for mod developers and server operators.
#    type: bool
# profiler.load = false

#    The default format in which profiles are being saved,
#    when calling `/profiler save [format]` without format.
#    type: enum values: txt, csv, lua, json, json_pretty
# profiler.default_report_format = txt

#    The file path relative to your worldpath in which profiles will be saved to.
#    type: string
# profiler.report_path = ""

#
# Client and Server
#

#    Name of the player.
#    When running a server, clients connecting with this name are admins.
#    When starting from the main menu, this is overridden.
#    type: string
name = librarian

#    Level of logging to be written to debug.txt:
#    -    <nothing> (no logging)
#    -    none (messages with no level)
#    -    error
#    -    warning
#    -    action
#    -    info
#    -    verbose
#    type: enum values: , none, error, warning, action, info, verbose
# debug_log_level = action

#    If the file size of debug.txt exceeds the number of megabytes specified in
#    this setting when it is opened, the file is moved to debug.txt.1,
#    deleting an older debug.txt.1 if it exists.
#    debug.txt is only moved if this setting is positive.
#    type: int
# debug_log_size_max = 50

#    Minimal level of logging to be written to chat.
#    type: enum values: , none, error, warning, action, info, verbose
# chat_log_level = error

#
# Mapgen
#

#    Name of map generator to be used when creating a new world.
#    Creating a world in the main menu will override this.
#    Current mapgens in a highly unstable state:
#    -    The optional floatlands of v7 (disabled by default).
#    type: enum values: v7, valleys, carpathian, v5, flat, fractal, singlenode, v6
mg_name = v7

#    Water surface level of the world.
#    type: int
water_level = 1

#    From how far blocks are generated for clients, stated in mapblocks (16 nodes).
#    type: int
max_block_generate_distance = 10

#    Limit of map generation, in nodes, in all 6 directions from (0, 0, 0).
#    Only mapchunks completely within the mapgen limit are generated.
#    Value is stored per-world.
#    type: int min: 0 max: 31000
mapgen_limit = 31000

## Mapgen V7

#    Map generation attributes specific to Mapgen v7.
#    'ridges': Rivers.
#    'floatlands': Floating land masses in the atmosphere.
#    'caverns': Giant caves deep underground.
#    type: flags possible values: mountains, ridges, floatlands, caverns, nomountains, noridges, nofloatlands, nocaverns
mgv7_spflags = mountains,ridges,nofloatlands,caverns

#    Y of mountain density gradient zero level. Used to shift mountains vertically.
#    type: int
# mgv7_mount_zero_level = 0

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
#    type: float
# mgv7_cave_width = 0.09

#    Y of upper limit of large caves.
#    type: int
# mgv7_large_cave_depth = -33

#    Minimum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgv7_small_cave_num_min = 0

#    Maximum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgv7_small_cave_num_max = 0

#    Minimum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgv7_large_cave_num_min = 0

#    Maximum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgv7_large_cave_num_max = 2

#    Proportion of large caves that contain liquid.
#    type: float min: 0 max: 1
# mgv7_large_cave_flooded = 0.5

#    Y-level of cavern upper limit.
#    type: int
# mgv7_cavern_limit = -256

#    Y-distance over which caverns expand to full size.
#    type: int
# mgv7_cavern_taper = 256

#    Defines full size of caverns, smaller values create larger caverns.
#    type: float
# mgv7_cavern_threshold = 0.7

#    Lower Y limit of dungeons.
#    type: int
# mgv7_dungeon_ymin = -31000

#    Upper Y limit of dungeons.
#    type: int
# mgv7_dungeon_ymax = 31000

### Noises

#    Y-level of higher terrain that creates cliffs.
#    type: noise_params_2d
# mgv7_np_terrain_base = {
#    offset      = 4,
#    scale       = 70,
#    spread      = (600, 600, 600),
#    seed        = 82341,
#    octaves     = 5,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Y-level of lower terrain and seabed.
#    type: noise_params_2d
# mgv7_np_terrain_alt = {
#    offset      = 4,
#    scale       = 25,
#    spread      = (600, 600, 600),
#    seed        = 5934,
#    octaves     = 5,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Varies roughness of terrain.
#    Defines the 'persistence' value for terrain_base and terrain_alt noises.
#    type: noise_params_2d
# mgv7_np_terrain_persist = {
#    offset      = 0.6,
#    scale       = 0.1,
#    spread      = (2000, 2000, 2000),
#    seed        = 539,
#    octaves     = 3,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Defines distribution of higher terrain and steepness of cliffs.
#    type: noise_params_2d
# mgv7_np_height_select = {
#    offset      = -8,
#    scale       = 16,
#    spread      = (500, 500, 500),
#    seed        = 4213,
#    octaves     = 6,
#    persistence = 0.7,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Variation of biome filler depth.
#    type: noise_params_2d
# mgv7_np_filler_depth = {
#    offset      = 0,
#    scale       = 1.2,
#    spread      = (150, 150, 150),
#    seed        = 261,
#    octaves     = 3,
#    persistence = 0.7,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Variation of maximum mountain height (in nodes).
#    type: noise_params_2d
# mgv7_np_mount_height = {
#    offset      = 256,
#    scale       = 112,
#    spread      = (1000, 1000, 1000),
#    seed        = 72449,
#    octaves     = 3,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Defines large-scale river channel structure.
#    type: noise_params_2d
# mgv7_np_ridge_uwater = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (1000, 1000, 1000),
#    seed        = 85039,
#    octaves     = 5,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    3D noise defining mountain structure and height.
#    Also defines structure of floatland mountain terrain.
#    type: noise_params_3d
# mgv7_np_mountain = {
#    offset      = -0.6,
#    scale       = 1,
#    spread      = (250, 350, 250),
#    seed        = 5333,
#    octaves     = 5,
#    persistence = 0.63,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    3D noise defining structure of river canyon walls.
#    type: noise_params_3d
# mgv7_np_ridge = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (100, 100, 100),
#    seed        = 6467,
#    octaves     = 4,
#    persistence = 0.75,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    3D noise defining giant caverns.
#    type: noise_params_3d
# mgv7_np_cavern = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (384, 128, 384),
#    seed        = 723,
#    octaves     = 5,
#    persistence = 0.63,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    First of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgv7_np_cave1 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (61, 61, 61),
#    seed        = 52534,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    Second of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgv7_np_cave2 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (67, 67, 67),
#    seed        = 10325,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    3D noise that determines number of dungeons per mapchunk.
#    type: noise_params_3d
# mgv7_np_dungeons = {
#    offset      = 0.9,
#    scale       = 0.5,
#    spread      = (500, 500, 500),
#    seed        = 0,
#    octaves     = 2,
#    persistence = 0.8,
#    lacunarity  = 2.0,
#    flags       = 
# }

#
# Online Content Repository
#

#    The URL for the content repository
#    type: string
# contentdb_url = https://content.minetest.net

#    Comma-separated list of flags to hide in the content repository.
#    "nonfree" can be used to hide packages which do not qualify as 'free software',
#    as defined by the Free Software Foundation.
#    You can also specify content ratings.
#    These flags are independent from Minetest versions,
#    so see a full list at https://content.minetest.net/help/content_flags/
#    type: string
# contentdb_flag_blacklist = nonfree, desktop_default

#    Maximum number of concurrent downloads. Downloads exceeding this limit will be queued.
#    This should be lower than curl_parallel_limit.
#    type: int
# contentdb_max_concurrent_downloads = 3

#
#
# IRC Settings
#
#

#The address of the IRC server to connect to.
irc.server=127.0.0.1

#The IRC channel to join.
irc.channel=#Minetest

#This prevents the server from flooding. It should be at least 2.0 but can be higher.
# After four messages this much time must pass between following messages.
irc.interval=2.0

#Nickname the server uses when it connects to IRC.
irc.nick=TFPLMinetest

#Password to use when connecting to the server.
irc.password=""

#NickServ password. Don't set this if you use SASL authentication.
irc.NSPass=""

#SASL password, same as nickserv password. You should use this instead of 
# NickServ authentication if the server supports it.
irc.sasl.pass=""

#The SASL username. this should normally be set to your NickServ account name.
irc.sasl.user-""

#Whether to ouput debug information.
irc.debug=false

#If false, the bot is connected by default.
#If True, a player with the 'irc_admin' privilaege has to use the /irc_connect command
# to connect to the server.
irc.disable_auto_connect=false

#If false, players join the channel automatically upon entering the game.
#If true, each user must manually use the /join command to join the channel.
#In any case, the players may use the /part command to opt-out of being in the channel.
irc.disable_auto_join=false

#Determines whether to send player join and part messages to the channel.
irc.send_join_part=true
